ERROR in ./node_modules/ethers/node_modules/ws/lib/permessage-deflate.js 3:13-28
Module not found: Error: Can't resolve 'zlib' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "zlib": require.resolve("browserify-zlib") }'
        - install 'browserify-zlib'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "zlib": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/receiver.js 5:4-21        
Module not found: Error: Can't resolve 'stream' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'
Did you mean './stream'?
Requests that should resolve in the current directory need to start with './'.
Requests that start with a name are treated as module requests and resolve within module directories (node_modules, C:\Users\hp\Desktop\Projects\patentik\node_modules).
If changing the source code is not an option there is also a resolve options 
called 'preferRelative' which tries to resolve these kind of requests in the 
current directory too.

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "stream": require.resolve("stream-browserify") }'
        - install 'stream-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "stream": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/sender.js 5:12-26
Module not found: Error: Can't resolve 'net' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

ERROR in ./node_modules/ethers/node_modules/ws/lib/sender.js 6:12-26
Module not found: Error: Can't resolve 'tls' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

ERROR in ./node_modules/ethers/node_modules/ws/lib/sender.js 9:4-21
Module not found: Error: Can't resolve 'crypto' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
        - install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "crypto": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/stream.js 5:4-21
Module not found: Error: Can't resolve 'stream' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'
Did you mean './stream'?
Requests that should resolve in the current directory need to start with './'.
Requests that start with a name are treated as module requests and resolve within module directories (node_modules, C:\Users\hp\Desktop\Projects\patentik\node_modules).
If changing the source code is not an option there is also a resolve options 
called 'preferRelative' which tries to resolve these kind of requests in the 
current directory too.

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "stream": require.resolve("stream-browserify") }'
        - install 'stream-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "stream": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket-server.js 6:13-28
Module not found: Error: Can't resolve 'http' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "http": require.resolve("stream-http") }'
        - install 'stream-http'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "http": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket-server.js 7:14-30
Module not found: Error: Can't resolve 'https' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "https": require.resolve("https-browserify") }'
        - install 'https-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "https": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket-server.js 8:12-26
Module not found: Error: Can't resolve 'net' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket-server.js 9:12-26
Module not found: Error: Can't resolve 'tls' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket-server.js 12:4-21
Module not found: Error: Can't resolve 'crypto' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
        - install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "crypto": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket.js 6:14-30      
Module not found: Error: Can't resolve 'https' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "https": require.resolve("https-browserify") }'
        - install 'https-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "https": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket.js 7:13-28      
Module not found: Error: Can't resolve 'http' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "http": require.resolve("stream-http") }'
        - install 'stream-http'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "http": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket.js 8:12-26      
Module not found: Error: Can't resolve 'net' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket.js 9:12-26      
Module not found: Error: Can't resolve 'tls' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket.js 13:4-21      
Module not found: Error: Can't resolve 'crypto' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
        - install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "crypto": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket.js 16:4-21      
Module not found: Error: Can't resolve 'stream' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'
Did you mean './stream'?
Requests that should resolve in the current directory need to start with './'.
Requests that start with a name are treated as module requests and resolve within module directories (node_modules, C:\Users\hp\Desktop\Projects\patentik\node_modules).
If changing the source code is not an option there is also a resolve options 
called 'preferRelative' which tries to resolve these kind of requests in the 
current directory too.

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "stream": require.resolve("stream-browserify") }'
        - install 'stream-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "stream": false }

ERROR in ./node_modules/ethers/node_modules/ws/lib/websocket.js 19:4-18      
Module not found: Error: Can't resolve 'url' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\node_modules\ws\lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "url": require.resolve("url/") 
}'
        - install 'url'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "url": false }

ERROR in ./node_modules/ethers/lib.commonjs/crypto/crypto.js 7:15-32
Module not found: Error: Can't resolve 'crypto' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\lib.commonjs\crypto'
Did you mean './crypto'?
Requests that should resolve in the current directory need to start with './'.
Requests that start with a name are treated as module requests and resolve within module directories (node_modules, C:\Users\hp\Desktop\Projects\patentik\node_modules).
If changing the source code is not an option there is also a resolve options 
called 'preferRelative' which tries to resolve these kind of requests in the 
current directory too.

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
        - install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "crypto": false }

ERROR in ./node_modules/ethers/lib.commonjs/providers/provider-ipcsocket.js 7:14-28
Module not found: Error: Can't resolve 'net' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\lib.commonjs\providers'

ERROR in ./node_modules/ethers/lib.commonjs/utils/geturl.js 12:31-46
Module not found: Error: Can't resolve 'http' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\lib.commonjs\utils'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "http": require.resolve("stream-http") }'
        - install 'stream-http'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "http": false }

ERROR in ./node_modules/ethers/lib.commonjs/utils/geturl.js 13:32-48
Module not found: Error: Can't resolve 'https' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\lib.commonjs\utils'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "https": require.resolve("https-browserify") }'
        - install 'https-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "https": false }

ERROR in ./node_modules/ethers/lib.commonjs/utils/geturl.js 14:15-30
Module not found: Error: Can't resolve 'zlib' in 'C:\Users\hp\Desktop\Projects\patentik\node_modules\ethers\lib.commonjs\utils'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
        - add a fallback 'resolve.fallback: { "zlib": require.resolve("browserify-zlib") }'
        - install 'browserify-zlib'
If you don't want to include a polyfill, you can use an empty module like this:
        resolve.fallback: { "zlib": false }

webpack compiled with 23 errors and 3 warnings



#   "browser": {
#     "http": false,
#     "https": false,
#     "stream": false,
#     "util": false,
#     "zlib": false,
#     "assert": false,
#     "crypto": false,
#     "url": false
#   },
